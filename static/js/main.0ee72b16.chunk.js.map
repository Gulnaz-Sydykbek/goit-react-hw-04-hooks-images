{"version":3,"sources":["components/images/imageGallery/Image.module.css","services/images-api.js","components/images/searchbar/Searchbar.js","components/images/imageGallery/ImageGalleryItem.js","components/images/imageGallery/ImageGallery.js","components/images/loader/Loader.js","components/images/error/Error.js","components/images/button/Button.js","components/images/modal/Modal.js","components/App.js","index.js"],"names":["module","exports","fetchImages","name","page","KEY","BASE_URL","perPage","url","fetch","then","response","ok","json","Promise","reject","Error","data","hits","propTypes","PropTypes","string","isRequired","number","Searchbar","props","useState","imageName","setImageName","s","SearchForm","SearchFormButton","SearchFormButtonLabel","SearchFormInput","className","onSubmit","e","preventDefault","trim","onFormSubmit","toast","type","autoComplete","autoFocus","placeholder","value","onChange","target","currentTarget","toLowerCase","ImageGalleryItem","largeImageURL","webformatURL","tags","onOpenLargeImgUrl","ImageGalleryItemIMG","ImageGalleryItemImage","onClick","src","alt","ImageGallery","images","onOpenLargeImg","map","id","Loader","color","height","width","timeout","message","role","Button","onLoadMoreClick","ButtonContainer","ref","window","scrollTo","top","document","documentElement","scrollHeight","behavior","modalRoot","querySelector","Modal","onToggleModal","children","showModal","useEffect","handleKeyDown","code","addEventListener","removeEventListener","Overlay","createPortal","App","setImages","status","setStatus","setPage","setShowModal","setLargeImageURL","error","setError","imagesFetchApi","state","catch","handleFormSubmit","toggleModal","length","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0ee72b16.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"Image_App__2hLMZ\",\"Searchbar\":\"Image_Searchbar__8gHSa\",\"SearchForm\":\"Image_SearchForm__D3vHI\",\"SearchFormButton\":\"Image_SearchFormButton__3cUcr\",\"SearchFormButtonLabel\":\"Image_SearchFormButtonLabel__2xEWO\",\"SearchFormInput\":\"Image_SearchFormInput__2AmCp\",\"ImageGallery\":\"Image_ImageGallery__2B0mp\",\"ImageGalleryItemIMG\":\"Image_ImageGalleryItemIMG__2nzOK\",\"ImageGalleryItemImage\":\"Image_ImageGalleryItemImage__2wKrt\",\"Overlay\":\"Image_Overlay__3bBVO\",\"Modal\":\"Image_Modal__3NH8F\",\"ButtonContainer\":\"Image_ButtonContainer__2lHae\",\"Button\":\"Image_Button__3Bi6e\",\"Loader\":\"Image_Loader__12O51\"};","import PropTypes from 'prop-types';\r\n\r\nfunction fetchImages(name, page = 1) {\r\n  const KEY = '22204382-c38be1b1e7fd4cceb3bc7515f';\r\n  const BASE_URL = 'https://pixabay.com/api';\r\n  const perPage = 12;\r\n  const url = `${BASE_URL}/?image_type=photo&orientation=horizontal&q=${name}&page=${page}&per_page=${perPage}&key=${KEY}`;\r\n\r\n  return fetch(url)\r\n    .then(response => {\r\n      if (response.ok) {\r\n        return response.json();\r\n      }\r\n\r\n      return Promise.reject(new Error(`There is no image with name ${name}`));\r\n    })\r\n    .then(data => data.hits);\r\n}\r\n\r\nfetchImages.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default fetchImages;\r\n","import { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport PropTypes from 'prop-types';\r\nimport s from '../imageGallery/Image.module.css';\r\n\r\nfunction Searchbar(props) {\r\n  const [imageName, setImageName] = useState('');\r\n\r\n  const handleNameChange = e => {\r\n    const target = e.currentTarget.value;\r\n\r\n    setImageName(target.toLowerCase());\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (imageName.trim() === '') {\r\n      toast('Enter name of image, please!');\r\n      return;\r\n    }\r\n\r\n    props.onFormSubmit(imageName.trim());\r\n\r\n    setImageName('');\r\n  };\r\n\r\n  const {\r\n    Searchbar,\r\n    SearchForm,\r\n    SearchFormButton,\r\n    SearchFormButtonLabel,\r\n    SearchFormInput,\r\n  } = s;\r\n\r\n  return (\r\n    <header className={Searchbar}>\r\n      <form className={SearchForm} onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className={SearchFormButton}>\r\n          <span className={SearchFormButtonLabel}>Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className={SearchFormInput}\r\n          type=\"text\"\r\n          name=\"imageName\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          value={imageName}\r\n          onChange={handleNameChange}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onFormSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Image.module.css';\r\n\r\nfunction ImageGalleryItem(props) {\r\n  const { largeImageURL, webformatURL, tags, onOpenLargeImgUrl } = props;\r\n  const { ImageGalleryItemIMG, ImageGalleryItemImage } = s;\r\n\r\n  return (\r\n    <li className={ImageGalleryItemIMG}>\r\n      <img\r\n        onClick={() => onOpenLargeImgUrl(largeImageURL)}\r\n        src={webformatURL}\r\n        alt={tags}\r\n        className={ImageGalleryItemImage}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  webformatURL: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n  onOpenLargeImgUrl: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport s from './Image.module.css';\r\nimport ImageGalleryItem from './ImageGalleryItem';\r\n\r\nfunction ImageGallery(props) {\r\n  const { images, onOpenLargeImg } = props;\r\n  const { ImageGallery } = s;\r\n\r\n  return (\r\n    <div>\r\n      <ul className={ImageGallery}>\r\n        {images.map(({ id, webformatURL, tags, largeImageURL }) => (\r\n          <ImageGalleryItem\r\n            key={id}\r\n            webformatURL={webformatURL}\r\n            tags={tags}\r\n            largeImageURL={largeImageURL}\r\n            onOpenLargeImgUrl={onOpenLargeImg}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default ImageGallery;\r\n","import LoaderImg from 'react-loader-spinner';\r\nimport s from '../imageGallery/Image.module.css';\r\n\r\nfunction Loader() {\r\n  return (\r\n    <div className={s.Loader}>\r\n      <LoaderImg\r\n        type=\"Puff\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction Error(props) {\r\n  const { message } = props;\r\n\r\n  return <p role=\"alert\">{message}</p>;\r\n}\r\n\r\nError.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Error;\r\n","import PropTypes from 'prop-types';\r\nimport s from '../imageGallery/Image.module.css';\r\n\r\nfunction Button(props) {\r\n  const { onLoadMoreClick } = props;\r\n  const { ButtonContainer, Button } = s;\r\n\r\n  const ref = () => {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={ButtonContainer}>\r\n      <button ref={ref} className={Button} onClick={onLoadMoreClick}>\r\n        Load more\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onLoadMoreClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport s from '../imageGallery/Image.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nfunction Modal(props) {\r\n  const { onToggleModal, children, showModal } = props;\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = e => {\r\n      if (e.code === 'Escape') {\r\n        onToggleModal();\r\n      }\r\n    };\r\n\r\n    if (showModal) {\r\n      window.addEventListener('keydown', handleKeyDown);\r\n    }\r\n\r\n    return () => window.removeEventListener('keydown', handleKeyDown);\r\n  }, [onToggleModal, showModal]);\r\n\r\n  const handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      onToggleModal();\r\n    }\r\n  };\r\n\r\n  const { Overlay, Modal } = s;\r\n\r\n  return createPortal(\r\n    <div className={Overlay} onClick={handleBackdropClick}>\r\n      <div className={Modal}>{children}</div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  onToggleModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","import { useState, useEffect } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport fetchImages from '../services/images-api';\r\nimport Searchbar from './images/searchbar/Searchbar';\r\nimport ImageGallery from './images/imageGallery/ImageGallery';\r\nimport Loader from './images/loader/Loader';\r\nimport Error from './images/error/Error';\r\nimport Button from './images/button/Button';\r\nimport Modal from './images/modal/Modal';\r\n\r\nfunction App() {\r\n  const [imageName, setImageName] = useState('');\r\n  const [images, setImages] = useState([]);\r\n  const [status, setStatus] = useState('idle');\r\n  const [page, setPage] = useState(1);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [largeImageURL, setLargeImageURL] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (imageName !== '') {\r\n      setStatus('pending');\r\n\r\n      imagesFetchApi();\r\n    }\r\n  }, [imageName]);\r\n\r\n  const imagesFetchApi = () => {\r\n    fetchImages(imageName, page)\r\n      .then(images => {\r\n        setImages(state => [...state, ...images]);\r\n        setPage(state => state + 1);\r\n        setStatus('resolved');\r\n      })\r\n      .catch(error => {\r\n        setError(error);\r\n        setStatus('rejected');\r\n      });\r\n  };\r\n\r\n  const handleFormSubmit = imageName => {\r\n    setImageName(imageName);\r\n    setImages([]);\r\n    setPage(1);\r\n  };\r\n\r\n  const toggleModal = () => {\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  const openLargeImg = largeImageURL => {\r\n    setLargeImageURL(largeImageURL);\r\n\r\n    toggleModal();\r\n  };\r\n\r\n  if (status === 'idle') {\r\n    return <Searchbar onFormSubmit={handleFormSubmit} />;\r\n  }\r\n\r\n  if (status === 'pending') {\r\n    return <Loader />;\r\n  }\r\n\r\n  if (status === 'rejected') {\r\n    return <Error message={error.message} />;\r\n  }\r\n\r\n  if (status === 'resolved') {\r\n    return (\r\n      <div>\r\n        <Searchbar onFormSubmit={handleFormSubmit} />\r\n        <ImageGallery images={images} onOpenLargeImg={openLargeImg} />\r\n\r\n        {images.length > 0 && <Button onLoadMoreClick={imagesFetchApi} />}\r\n\r\n        {showModal && (\r\n          <Modal onToggleModal={toggleModal} showModal={showModal}>\r\n            <img src={largeImageURL} alt=\"\" />\r\n          </Modal>\r\n        )}\r\n\r\n        <ToastContainer autoClose={3000} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}